# Kubernetes Cluster Setup Script (setup.sh)
#!/bin/bash

set -e

# Ask user if this is a Master or Worker node
echo "Is this node a Master or Worker? (Enter 'master' or 'worker')"
read NODE_TYPE

# Update system and install dependencies
sudo apt-get update && sudo apt install apt-transport-https curl -y

# Install containerd
sudo mkdir -p /etc/apt/keyrings && \
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg && \
echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null && \
sudo apt-get update && sudo apt-get install containerd.io -y

# Configure containerd
sudo mkdir -p /etc/containerd && \
sudo containerd config default | sudo tee /etc/containerd/config.toml && \
sudo sed -i -e 's/SystemdCgroup = false/SystemdCgroup = true/g' /etc/containerd/config.toml && \
sudo systemctl restart containerd

# Install Kubernetes
curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.30/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg && \
echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.30/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list && \
sudo apt-get update && sudo apt-get install -y kubelet kubeadm kubectl && \
sudo apt-mark hold kubelet kubeadm kubectl && \
sudo systemctl enable --now kubelet

# Disable swap
sudo swapoff -a && sudo sed -i '/ swap / s/^/#/' /etc/fstab

# Enable kernel modules and sysctl settings
sudo modprobe br_netfilter && \
sudo sysctl -w net.ipv4.ip_forward=1

if [ "$NODE_TYPE" == "master" ]; then
    echo "Setting up Master Node..."
    # Initialize Kubernetes cluster
    sudo kubeadm init --pod-network-cidr=10.244.0.0/16
    
    # Configure kubectl for the current user
    mkdir -p $HOME/.kube && \
    sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config && \
    sudo chown $(id -u):$(id -g) $HOME/.kube/config
    
    # Install Flannel
    kubectl apply -f https://github.com/flannel-io/flannel/releases/latest/download/kube-flannel.yml
    
    # Verify Installation
    kubectl get pods --all-namespaces
    
    # Output join command
    kubeadm token create --print-join-command | tee /tmp/kubeadm_join_command.sh
    echo "Copy the join command from /tmp/kubeadm_join_command.sh and run it on each worker node."

elif [ "$NODE_TYPE" == "worker" ]; then
    echo "Setting up Worker Node..."
    echo "Please run the join command from the master node to join this worker to the cluster."
else
    echo "Invalid input! Please run the script again and enter 'master' or 'worker'."
    exit 1
fi
